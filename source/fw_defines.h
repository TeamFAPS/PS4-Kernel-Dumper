#ifndef __FW_DEFINES_H__
#define __FW_DEFINES_H__
#pragma once

// order: (to avoid kernel panic by reading not allocated memory)
#define KERN_350_XFAST_SYSCALL		0x3A1AD0	// #5
#define KERN_355_XFAST_SYSCALL		0x3A1F10	// #6
#define	KERN_405_XFAST_SYSCALL		0x30EB30	// #4
#define	KERN_455_XFAST_SYSCALL		0x3095D0	// #2
#define	KERN_474_XFAST_SYSCALL		0x30B7D0	// #3
#define	KERN_500_XFAST_SYSCALL		0x1C0     // #1
#define	KERN_501_XFAST_SYSCALL		0x1C0     // #1
#define	KERN_503_XFAST_SYSCALL		0x1C0     
#define	KERN_505_XFAST_SYSCALL		0x1C0     // #1

#define KERN_350_PRISON_0		0xEF5A00
#define KERN_355_PRISON_0		0xEF5A00
#define KERN_405_PRISON_0		0xF26010
#define KERN_455_PRISON_0		0x10399B0
#define KERN_474_PRISON_0		0x1042AB0
#define KERN_500_PRISON_0		0x10986A0
#define KERN_501_PRISON_0		0x10986A0
#define KERN_503_PRISON_0		0x10986A0
#define KERN_505_PRISON_0		0x10986A0

#define KERN_350_ROOTVNODE		0x1963000
#define KERN_355_ROOTVNODE		0x1963040
#define KERN_405_ROOTVNODE		0x206D250
#define KERN_455_ROOTVNODE		0x21AFA30
#define KERN_474_ROOTVNODE		0x21B89E0
#define KERN_500_ROOTVNODE		0x22C19F0
#define KERN_501_ROOTVNODE		0x22C19F0
#define KERN_503_ROOTVNODE		0x22C1A70
#define KERN_505_ROOTVNODE		0x22C1A70

#define KERN_350_PRINTF			0x1DF410
#define KERN_355_PRINTF			0x1DF550
#define KERN_405_PRINTF			0x347580
#define KERN_455_PRINTF			0x17F30
#define KERN_474_PRINTF			0x17F30
#define KERN_500_PRINTF			0x435C70
#define KERN_501_PRINTF			0x435C70
#define KERN_503_PRINTF			0x436000
#define KERN_505_PRINTF			0x436040

#define KERN_350_COPYOUT		0x3B9220
#define KERN_355_COPYOUT		0x3B9660
#define KERN_405_COPYOUT		0x286D70
#define KERN_455_COPYOUT		0x14A7B0
#define KERN_474_COPYOUT		0x149E40
#define KERN_500_COPYOUT		0x1EA520
#define KERN_501_COPYOUT		0x1EA520
#define KERN_503_COPYOUT		0x1EA630
#define KERN_505_COPYOUT		0x1EA630

#endif
